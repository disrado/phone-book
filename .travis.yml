language: cpp

sudo: required
dist: trusty

matrix:
  include:

    ###########################################################################
    # GCC on Linux.
    #

    #
    # GCC 7 Release.
    #
    - os: linux
      env:
        - JOB="GCC 7 Release"
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Release
      addons: &gcc7
        apt:
          packages:
            - gcc-7
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - |
          conan install .. \
            --build fmt \
            --build sqlite3 \
            --build missing \
            -s build_type=${BUILD_TYPE} \
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

    #
    # GCC 7 Release + codecov.
    #
    - os: linux
      env:
        - JOB="GCC 7 Release + Codecov"
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Release
        - ENABLE_TESTING=TRUE
        - ENABLE_COVERAGE=TRUE
      addons: *gcc7
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - conan remote add conan https://api.bintray.com/conan/bincrafters/public-conan
        - |
          conan install .. \
            --build gtest \
            --build fmt \
            --build sqlite3 \
            --build missing \
            -s build_type=${BUILD_TYPE} \
            -s compiler.libcxx=libstdc++11
        - |
          cmake .. \
            -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE} \
            -DENABLE_TESTING:BOOL=${ENABLE_TESTING} \
            -DENABLE_COVERAGE:BOOL=${ENABLE_COVERAGE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2
      after_success:
        - ctest --extra-verbose --parallel 2
        - |
          # Codecov
          # Capture coverage info.
          lcov --directory . --capture --output-file coverage.info
          # Filter out system.
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          # Upload the report.
          bash <(curl -s https://codecov.io/bash)

before_install:
  - sudo add-apt-repository --yes ppa:beineri/opt-qt591-trusty
  - sudo apt-get update -qq

install:
  # Set up the environment.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      # Set the ${CC} variable properly.
      export CC=${CC_COMPILER}
    fi
  # Set the ${CXX} variable properly.
  - export CXX=${CXX_COMPILER}
  - export Qt5_DIR=/opt/Qt/5.9.1/
  - export PATH=$PATH:/data/myscripts
  - sudo apt-get -y install qt59[QTPACKAGE]
  - sudo apt-get install qtbase5-dev
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/.
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}" && cd "${DEPS_DIR}"
  # Install a recent CMake and Conan.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      CMAKE_VERSION=3.10.0
      CMAKE_ARCH=cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/${CMAKE_ARCH}"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      sudo pip install conan
    fi

script:
  - source /opt/qt59/bin/qt59-env.sh
  - /opt/qt59/bin/qmake
  - make